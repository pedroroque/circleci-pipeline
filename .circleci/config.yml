version: 2.1

orbs:
  node: circleci/node@4.7
  ruby: circleci/ruby@1.8.0
  sonarcloud: sonarsource/sonarcloud@1.0.3

parameters:
  node_version:
    type: string
    default: "16.10"
  ruby_version:
    type: string
    default: "2.7.6"
  postgres_version:
    type: string
    default: "11.15"
  db_name:
    type: string
    default: "circleci-pipeline_test"
  db_user:
    type: string
    default: "postgres"
  root_folder:
    type: string
    default: ~/circleci-pipeline
  deploy_folder:
    type: string
    default: ~/circleci-pipeline/.deployment

commands:
  install_deps:
    description: Install dependency packages
    steps:
      - run:
          name: Install dependencies
          command: |
            sudo apt update
  
  prepare_db:
    description: Prepare DB to be used for tests
    steps:
      - run:
          name: Prepare DB
          command: |
            sudo apt install lsof
            ls
            cp ./.circleci/db_config.yml ./config/database.yml
  
  wait_db:
    description: Wait for DB to be ready
    steps:
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
  
  setup_db:
    description: Setup DB
    steps:
      - run:
          name: Setup DB
          command: |
            bundle exec rake db:drop db:setup
            bundle exec rake db:create db:schema:load --trace
jobs:
  build:
    docker:
      - image: cimg/ruby:<< pipeline.parameters.ruby_version >>-node
    working_directory: << pipeline.parameters.root_folder >>
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Install foreman
          command: |
            gem install foreman
      - persist_to_workspace:
          root: .
          paths:
            - .

  rspec:
    docker:
      - image: cimg/ruby:<< pipeline.parameters.ruby_version >>-node
      - image: cimg/postgres:<< pipeline.parameters.postgres_version >>
        environment:
          TZ: "/usr/share/zoneinfo/America/Chicago"
          POSTGRES_DB: << pipeline.parameters.db_name >>
          POSTGRES_USER: << pipeline.parameters.db_user >>
          POSTGRES_PASSWORD: ""
    working_directory: << pipeline.parameters.root_folder >>
    environment:
      BUNDLE_JOBS: "4"
      BUNDLE_RETRY: "3"
      TZ: "/usr/share/zoneinfo/America/Chicago"
      RAILS_ENV: test
      PGHOST: 127.0.0.1
      PGPASSWORD: ""
      PGUSER: << pipeline.parameters.db_user >>
      DB_host: 127.0.0.1
      DB_user: << pipeline.parameters.db_user >>
      DB_name: << pipeline.parameters.db_name >>
    steps:
      - attach_workspace:
          at: << pipeline.parameters.root_folder >>
      - install_deps
      - ruby/install-deps
      - prepare_db
      - wait_db
      - setup_db
      - run:
          name: Run RSpec
          command: |
            bundle exec rspec
      - persist_to_workspace:
          root: ./coverage
          paths:
            - ./coverage

  code_quality:
    docker:
      - image: cimg/ruby:<< pipeline.parameters.ruby_version >>-node
    working_directory: << pipeline.parameters.root_folder >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run rubocop
          command: |
            gem install rubocop -v 1.39
            gem install rubocop-rspec -v 2.15
            gem install rubocop-rails -v 2.17
            gem install rubocop-shopify -v 2.10.1
            gem install rubocop-performance -v 1.15.1
            rubocop --parallel --config .rubocop.yaml --format json --out .reports/app/rubocop.json || true
      - sonarcloud/scan

workflows:
  main:
    jobs:
      - build

      - rspec:
          requires:
            - build

      - code_quality:
          context: SonarCloud
          requires:
            - rspec
